# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE_NAME: registry.gitlab.com/my-project:feature-x
  before_script:
    - docker login -u "taidn2003" -p "Taidn_^2003" registry.gitlab.com
  # All branches are tagged with $DOCKER_IMAGE_NAME (defaults to commit ref slug)
  # Default branch is also tagged with `latest`
  script:
    - docker build --pull -t "registry.gitlab.com/my-project:feature-x" .
    - docker push "registry.gitlab.com/my-project:feature-x"
    - |
      if [[ "feature-x" == "main" ]]; then  # Assuming "main" is the default branch
        docker tag "registry.gitlab.com/my-project:feature-x" "registry.gitlab.com/my-project:latest"
        docker push "registry.gitlab.com/my-project:latest"
      fi
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
